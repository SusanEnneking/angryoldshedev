import { render, renderHook, screen } from "@testing-library/react";
import Blog from '../app/blog/Blog';
import '@testing-library/jest-dom';
import { enableFetchMocks } from 'jest-fetch-mock'
import useBlogPosts  from '../app/hooks/useBlogPosts'
import useSections from '../app/hooks/useSections'

enableFetchMocks();
const blogsBody = {
    "errcode":0,
    "message":"OK",
    "data":[
        {"id":1,
        "bodyId":1,
        "autogenerated":false,
        "topic":"Culture Topic",
        "title":"A culture Blog",
        "questionPosedToOpenAi":"Well written culture question.",
        "createdOn":"2023-12-23T00:00:00Z",
        "createdBy":"init","active":true,
        "category":"Culture",
        "imageUrl":"https://source.unsplash.com/random?wallpapers",
        "imageText":"Thank you unsplash!",
        "body":"This is what I have to say about culture."
    }]};
const categoriesBody = {
    "errcode":0,
    "message":"OK",
    "data":[
        "Culture","Technical","Inclusion","Random Rant","Introduction"
    ]};

describe('testing Component', () => {
    beforeEach(() => {
        fetch.resetMocks()
    })

//test block
    test("Blog renders correctly", () => {
        fetch.once(JSON.stringify(blogsBody)).once(JSON.stringify(categoriesBody));
        const {posts} = renderHook(() => useBlogPosts());
        const {sections} = renderHook(() => useSections());

        // render the component on virtual dom
        render(<Blog />);
        
        //select the elements you want to interact with
        const header = screen.queryByTestId("header");
        const introduction = screen.queryByTestId("introduction");
        const featured = screen.queryByTestId("featured");
        const firehose = screen.queryByTestId("firehose");
        const sidebar = screen.queryByTestId("sidebar");
        const footer = screen.queryByTestId("footer");
        //assert the expected result
        expect(header).toBeInTheDocument;
        expect(introduction).toBeInTheDocument;
        expect(featured).toBeInTheDocument;
        expect(firehose).toBeInTheDocument;
        expect(sidebar).toBeInTheDocument;
        expect(footer).toBeInTheDocument;
    })
})
